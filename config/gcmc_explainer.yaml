# How many hops for the subgraph? (Only used if `user_batch_exp` == 1)
n_hops: 2
# `n_hops` is doubled such that each hop considers all the interactions of closest users in the bipartite graph
neighbors_hops: True
# optimizer for explainer
cf_optimizer: SGD
# learning rate of optimizer for explainer
cf_learning_rate: 5000 # 1200 for NDCGApprox
# epochs to generate explanations
cf_epochs: 100
# how many users should be considered to explain?
user_batch_exp: 1
# not consider the prediction loss
not_pred: True
# if the fair or pred loss should be deactivated if the top-k list is already perturbed
pred_same: False
# loss weight for the graph dist loss
cf_beta: 0.5
# the function used to check if the top-k list was perturbed
cf_dist: damerau_levenshtein
# how many top items to consider for model outcome list and fairness loss
cf_topk: 10

# loss weight for the fairness loss (used only if `explain_fairness` == True)
# FairBD
# fair_beta: 0.5
# FairNDCGApproxLoss
fair_beta: 0.5
dropout_prob: 0.1

# hyper-parameter that "forces" the percentage of low bias items in the topk (max 1.0)
fair_target_lambda: 0.90

# device: cpu

# It explains the predictions for all the users in the dataset on a single graph
group_explain: False
group_explain_by:


# Last.FM 1K
# data_path: 'src/dataset/lastfm-1k' # for Last.FM 1K

# consider only the nodes at the last hop
sub_matrix_only_last_level: False
# does not consider the interactions of the user to explain, consider the remaining hops
not_user_sub_matrix: False
# does not perform perturbation, uses only the subgraph of the user to `explain` (used for analysis)
only_subgraph: False

# FairBD 6: row > 1
# FairBD 7: row < 1 and sorted_target.max() - sorted_target * sorted_input
# FairBD 8: row > 1 taking all the items until the last row < 1
# if to use fairness loss
explain_fairness: True
# uses FairNDCGApprox instead of FairBD
explain_fairness_NDCGApprox: True
# sensitive attributes to be used in the fairness losses and for following analysis
sensitive_attributes: [gender] # , age]

# if True each new exp will have a different number of edges from the last one
save_unique_graph_dist_loss: True

# -infinite is assigned to the user history interactions in the list of scores to consider a top-k of only new items
# This zero out the gradient for the items for which -infinite is assigned, so a subgraph with only the interactions of
# the user cannot be "explained" by using the top-k list. This parameter does not assign -infinite if the items of the
# user history are not in the top-k and can be used for explanation
keep_history_if_possible: False

# force return of explanations even though the top-k is not perturbed (only useful for hops analysis)
explainer_force_return: False

# ML-100K
load_col:
    inter: [user_id, item_id, timestamp]
    item: [item_id, class]
    user: [user_id, gender, age]

# ML-1M
#load_col:
#    inter: [user_id, item_id, timestamp]
#    item: [item_id, genre]
#    user: [user_id, gender, age]
